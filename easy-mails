<?php

require_once __DIR__.'/vendor/autoload.php';

use ThenLabs\EasyMails\StratusApp;
use ThenLabs\EasyMails\Bus;
use ThenLabs\HttpServer\HttpServer;
use ThenLabs\HttpServer\Event\RequestEvent;
use ThenLabs\StratusPHP\StratusRequest;
use ThenLabs\ComposedViews\Event\RenderEvent;
use ThenLabs\ComposedViews\Asset\Script;
use function Opis\Closure\{serialize as s, unserialize as u};

$httpServer = new HttpServer([
    'host' => '127.0.0.1',
    'port' => 8800,
    'backlog' => 10,
    'document_root' => __DIR__.'/public',
]);

$dispatcher = $httpServer->getDispatcher();

$appSource = null;

$dispatcher->addListener(RequestEvent::class, function ($event) use (&$appSource) {
    $request = $event->getRequest();
    $response = $event->getResponse();

    $uri = $event->getRequestUri();

    if ($uri == '/') {
        $stratusApp = new StratusApp('/controller');
        $stratusApp->addFilter(function (RenderEvent $event) {
            $script = new Script('easy-mails', null, '');
            $script->setSource(<<<JAVASCRIPT
                setInterval(() => {
                    stratusAppInstance.dispatch('update', {}, false);
                }, 1000);
            JAVASCRIPT);

            $event->filter('body')->append($script->render());
        });

        $stratusApp->on('update', function ($event) {
            $app = $event->getApp();
            $app->showAlert('Hi');
        });

        $response->setContent($stratusApp->render());
        $appSource = s($stratusApp);

        $event->stopPropagation();
    } elseif (0 === strpos($uri, '/controller')) {
        $stratusApp = u($appSource);

        $clientSocket = $event->getClientSocket();
        $bus = new Bus($clientSocket);
        $stratusApp->setBus($bus);

        $stratusRequest = StratusRequest::createFromJson(
            $request->request->get('stratus_request')
        );

        $stratusResponse = $stratusApp->run($stratusRequest);

        if ($stratusResponse->isSuccessful()) {
            $appSource = s($stratusApp);
        }

        $bus->close();

        $event->stopPropagation();
    }
});

$httpServer->start();

while (true) {
    $httpServer->run();
}
